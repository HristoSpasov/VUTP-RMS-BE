<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RMS.API</name>
    </assembly>
    <members>
        <member name="T:RMS.API.Controllers.TeacherController">
            <summary>
            Teacher actions controller.
            </summary>
        </member>
        <member name="F:RMS.API.Controllers.TeacherController.logger">
            <summary>
            Logger private field.
            </summary>
        </member>
        <member name="F:RMS.API.Controllers.TeacherController.teacherService">
            <summary>
            Teacher service private field.
            </summary>
        </member>
        <member name="M:RMS.API.Controllers.TeacherController.#ctor(Microsoft.Extensions.Logging.ILogger{RMS.API.Controllers.TeacherController},RMS.Services.Contracts.ITeacherService)">
            <summary>
            Initializes a new instance of the <see cref="T:RMS.API.Controllers.TeacherController"/> class.
            </summary>
            <param name="logger">Logger parameter.</param>
            <param name="teacherService">Teacher service parameter.</param>
        </member>
        <member name="M:RMS.API.Controllers.TeacherController.GetAllTeachers">
            <summary>
            Get all teachers.
            </summary>
            <returns>Get all teachers data.</returns>
        </member>
        <member name="M:RMS.API.Controllers.TeacherController.GetTeacherById(System.Guid)">
            <summary>
            Get teacher by id.
            </summary>
            <param name="id">Teacher id.</param>
            <returns>Get a teacher data.</returns>
        </member>
        <member name="M:RMS.API.Controllers.TeacherController.CreateTeacher(RMS.API.Models.RequestModels.CreateTeacherRequestModel)">
            <summary>
            Create new teacher.
            </summary>
            <param name="createTeacherRequestModel">Create teacher request model.</param>
            <returns>Get a teacher data.</returns>
        </member>
        <member name="M:RMS.API.Controllers.TeacherController.UpdateTeacher(RMS.API.Models.RequestModels.UpdateTeacherRequestModel)">
            <summary>
            Update teacher.
            </summary>
            <param name="updateTeacherRequestModel">Update teacher request model.</param>
            <returns>Get a teacher data.</returns>
        </member>
        <member name="M:RMS.API.Controllers.TeacherController.DeleteTeacher(System.Guid)">
            <summary>
            Delete teacher.
            </summary>
            <param name="id">Teacher id to delete.</param>
            <returns>Get a teacher data.</returns>
        </member>
        <member name="M:RMS.API.Infrastructure.Extensions.RegisterSwaggerExtensions.RegisterSwaggerDocumentation(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configure swagger documentation. Add Azure Oauth2 authentication and API versioning.
            </summary>
            <param name="services">Service collection.</param>
            <param name="configuration">Configuration.</param>
        </member>
        <member name="M:RMS.API.Infrastructure.Filters.ModelStateValidationActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            This method is invoked before an action method in the controller is invoked.
            </summary>
            <param name="actionContext">context for action filters</param>
        </member>
        <member name="M:RMS.API.Program.Main(System.String[])">
            <summary>
            The main method of the application
            </summary>
            <param name="args">Command line arguments</param>
        </member>
        <member name="M:RMS.API.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Method for creating IWebHostBuilder
            </summary>
            <param name="args">Command line arguments</param>
            <returns>A builder for IWebHost</returns>
        </member>
        <member name="T:RMS.API.Startup">
            <summary>
            .NET core startup class
            </summary>
        </member>
        <member name="M:RMS.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:RMS.API.Startup"/> class.
            </summary>
            <param name="configuration">Server configuration properties</param>
            <param name="hostingEnvironment">Hosting environment information</param>
        </member>
        <member name="P:RMS.API.Startup.Configuration">
            <summary>
            Gets application configuration properties.
            </summary>
        </member>
        <member name="P:RMS.API.Startup.HostingEnvironment">
            <summary>
            Gets hosting environment
            </summary>
        </member>
        <member name="M:RMS.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Services to add</param>
            <returns>Service provider</returns>
        </member>
    </members>
</doc>
